[git commands]
git config --global user.name [username] [to set username]
git config --global user.email [email] [to set email]
code . [open vs code]
git init [create empty local repo]
ls -lart [shows directories in git]
ls [shows present files]
git status [shows file status]
touch [filename with extension] [creates blank file]
git add -A [to add all files to staging area]
git commit -m "[message]" [to commit changes]
git checkout [filename with extension] [undo to last commit] 
git checkout -f [undo all files to last commit]
git log [shows recent commits]
git log -p -[number of commits to show] [show limited commits] [press 'q' to exit]
git diff [compares changes in non staged file to staged file]
git diff --staged [comapares staged file to commited file]
git commit -a -m "[message]" [directly commites changes without staging]
git rm --cached [filename with ext] [removes file from staging area]
git rm [filename with ext] [removes file from hard disk]
git status -s [shows file status in simple way]
touch .gitignore [create a file which ignores all files inside it]
# Inside .gitignore file :
/[filename with ext] [will only ignore file inside the gitignore]
*.[file ext] [will ignore all files with this ext]
[folder name]/ [will ignore this folder name]
git branch [shows present branches]
git branch [branch name] [creates new branch]
git checkout [branch name] [switches to this branch name]
git merge [branch name] [merges this branch with the current branch]
git checkout -b [branch name] [creates and switches to this new branch]
git remote add origin [url] [add remote repo url]
git remote -v [shows url for fetch and pull]
git clone [url] [folder name] [save a clone of repo in given folder name]